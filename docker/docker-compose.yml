x-common-environment: &common-environment
  AWS_ACCESS_KEY_ID: admin
  AWS_SECRET_ACCESS_KEY: password
  AWS_REGION: us-east-1

services:
  trino-coordinator:
    image: 'trinodb/trino:latest'
    hostname: trino-coordinator
    ports:
      - '8080:8080'
    volumes:
      - "./trino/iceberg.properties:/etc/trino/catalog/iceberg.properties"
      - "./trino/catalog/test-schema.sql:/home/trino/test-schema.sql"
    depends_on:
      - catalog
      - postgres
      - minio
    networks:
      - trino-network


  catalog:
    image: tabulario/iceberg-rest
    container_name: catalog
    networks:
      - trino-network
    depends_on:
      postgres:
        condition: service_healthy

    ports:
      - 8181:8181
    environment:
      <<: *common-environment
      CATALOG_WAREHOUSE: s3://warehouse/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
      CATALOG_URI: jdbc:postgresql://postgres:5432/postgredb
      CATALOG_JDBC_USER: admin
      CATALOG_JDBC_PASSWORD: password


  postgres:
    image: 'postgres:latest'
    hostname: postgres
    expose:
      - '5432'
    ports:
      - '5431:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgredb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d postgredb" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - trino-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@mail.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin123
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

  minio:
    image: 'minio/minio:latest'
    hostname: minio
    container_name: minio
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
      MINIO_DOMAIN: minio
    command: server --console-address ":9001" /data
    networks:
      trino-network:
        aliases:
          - warehouse.minio

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    environment:
      <<: *common-environment
    entrypoint: >
      /bin/sh -c "
          until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
          /usr/bin/mc mb minio/warehouse;
          /usr/bin/mc policy set public minio/warehouse;
          tail -f /dev/null
      "
    networks:
      - trino-network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    networks:
      - trino-network
    depends_on:
      - postgres
      - trino-coordinator


volumes:
  pgadmin-data:
  postgres-data:
  minio-data:
    driver: local


networks:
  trino-network:
    driver: bridge
